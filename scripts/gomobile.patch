
diff -ru a/cmd/gomobile/bind_androidapp.go b/cmd/gomobile/bind_androidapp.go
--- a/cmd/gomobile/bind_androidapp.go	2020-02-05 20:34:42.541391299 +0300
+++ b/cmd/gomobile/bind_androidapp.go	2020-02-05 19:40:24.097269783 +0300
@@ -257,7 +257,7 @@
 
 const (
 	javacTargetVer = "1.7"
-	minAndroidAPI  = 15
+	minAndroidAPI  = 9
 )
 
 func buildJar(w io.Writer, srcDir string) error {
diff -ru a/cmd/gomobile/env.go b/cmd/gomobile/env.go
--- a/cmd/gomobile/env.go	2020-02-05 20:34:42.541391299 +0300
+++ b/cmd/gomobile/env.go	2020-02-05 20:00:45.469315331 +0300
@@ -22,7 +22,7 @@
 	androidArmNM string
 	darwinArmNM  string
 
-	allArchs = []string{"arm", "arm64", "386", "amd64"}
+	allArchs = []string{"armv5", "armv7", "arm64", "386", "amd64"}
 
 	bitcodeEnabled bool
 )
@@ -112,7 +112,7 @@
 			}
 			androidEnv[arch] = []string{
 				"GOOS=android",
-				"GOARCH=" + arch,
+				"GOARCH=" + archTool(arch),
 				"CC=" + clang,
 				"CXX=" + clangpp,
 				"CGO_ENABLED=1",
@@ -134,8 +134,13 @@
 		var err error
 		var clang, cflags string
 		switch arch {
-		case "arm":
-			env = append(env, "GOARM=7")
+		case "armv5", "armv7":
+			switch arch {
+			case "armv5":
+				env = append(env, "GOARM=5")
+			case "armv7":
+				env = append(env, "GOARM=7")
+			}
 			fallthrough
 		case "arm64":
 			clang, cflags, err = envClang("iphoneos")
@@ -155,7 +160,7 @@
 		}
 		env = append(env,
 			"GOOS=darwin",
-			"GOARCH="+arch,
+			"GOARCH="+archTool(arch),
 			"CC="+clang,
 			"CXX="+clang+"++",
 			"CGO_CFLAGS="+cflags+" -arch "+archClang(arch),
@@ -216,7 +221,9 @@
 
 func archClang(goarch string) string {
 	switch goarch {
-	case "arm":
+	case "armv5":
+		return "arm"
+	case "armv7":
 		return "armv7"
 	case "arm64":
 		return "arm64"
@@ -229,6 +236,17 @@
 	}
 }
 
+func archTool(goarch string) string {
+	switch goarch {
+	case "armv5":
+		return "arm"
+	case "armv7":
+		return "arm"
+	default:
+		return goarch
+	}
+}
+
 // environ merges os.Environ and the given "key=value" pairs.
 // If a key is in both os.Environ and kv, kv takes precedence.
 func environ(kv []string) []string {
@@ -329,7 +340,14 @@
 }
 
 var ndk = ndkConfig{
-	"arm": {
+	"armv5": {
+		arch:        "arm",
+		abi:         "armeabi",
+		minAPI:      14,
+		toolPrefix:  "arm-linux-androideabi",
+		clangPrefix: "armv5-linux-androideabi",
+	},
+	"armv7": {
 		arch:        "arm",
 		abi:         "armeabi-v7a",
 		minAPI:      16,
diff -ru a/cmd/gomobile/bind.go b/cmd/gomobile/bind.go
--- a/cmd/gomobile/bind.go	2020-02-23 13:24:23.185864297 +0300
+++ b/cmd/gomobile/bind.go	2020-02-23 13:24:25.061840995 +0300
@@ -301,7 +301,7 @@
 	}
 
 	return writeFile(filepath.Join(tmpdir, "src", "go.mod"), func(w io.Writer) error {
-		f, err := getModuleVersions(targetOS, targetArch, ".")
+		f, err := getModuleVersions(targetOS, archTool(targetArch), ".")
 		if err != nil {
 			return err
 		}

